# -*- coding: utf-8 -*-
"""neuralmodel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1APYqASi1TYeGmY_Ju-TILweC2mreQdr7
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard

import tensorflow as tf
import datetime
from tensorflow.keras.callbacks import TensorBoard
from tensorboard import notebook  # Import TensorBoard for Colab

# Load dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0  # Normalize

# Define a simple model
model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10, activation='softmax')
])

# Compile model
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Define TensorBoard log directory
log_dir = "logs/fit/" + datetime.datetime.now().strftime("%Y%m%d-%H%M%S")

# Create TensorBoard callback

tensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_dir, histogram_freq=1)


# Train model with TensorBoard
model.fit(x_train, y_train, epochs=5, validation_data=(x_test, y_test), callbacks=[tensorboard_callback])

# Commented out IPython magic to ensure Python compatibility.
# %tensorboard --logdir logs/fit

