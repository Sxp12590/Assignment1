# -*- coding: utf-8 -*-
"""Lossfunctions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IBLxH-qnaG_tUD3hpmuEN1MkCoMwEuFd
"""

import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt

# Step 1: Define true values (y_true) and model predictions (y_pred)
y_true = np.array([0, 1, 0, 1])  # True values
y_pred = np.array([0.1, 0.9, 0.2, 0.8])
y_pred1 = np.array([[0.9, 0.1], [0.1, 0.9], [0.8, 0.2], [0.2, 0.8]])  # Model predictions (probabilities)


# Step 2: Compute Mean Squared Error (MSE) and Categorical Cross-Entropy (CCE) losses
mse_loss = tf.keras.losses.MeanSquaredError()
cce_loss = tf.keras.losses.CategoricalCrossentropy()

# MSE Loss: Compute using the true values and predictions
mse_value = mse_loss(y_true, y_pred)
print(f"Mean Squared Error (MSE) Loss: {mse_value.numpy()}")

# CCE Loss: For Categorical Cross-Entropy, we need to one-hot encode the true labels
# Assuming y_true are binary, one-hot encode them
y_true_one_hot = np.array([[1, 0], [0, 1], [1, 0], [0, 1]])  # One-hot encoding of y_true
cce_value = cce_loss(y_true_one_hot, y_pred1)
print(f"Categorical Cross-Entropy (CCE) Loss: {cce_value.numpy()}")

# Step 3: Modify predictions slightly and check how the loss values change
y_pred_modified = np.array([0.2, 0.8, 0.3, 0.7])
y_pred_modified1 = np.array([[0.8, 0.2], [0.2, 0.8], [0.7, 0.3], [0.3, 0.7]])


# Recompute the losses with modified predictions
mse_value_modified = mse_loss(y_true, y_pred_modified)
cce_value_modified = cce_loss(y_true_one_hot, y_pred_modified1)

print(f"Modified MSE Loss: {mse_value_modified.numpy()}")
print(f"Modified CCE Loss: {cce_value_modified.numpy()}")

# Step 4: Plot loss function values using Matplotlib
losses = [mse_value.numpy(), cce_value.numpy(), mse_value_modified.numpy(), cce_value_modified.numpy()]
loss_labels = ['MSE Loss (Original)', 'CCE Loss (Original)', 'MSE Loss (Modified)', 'CCE Loss (Modified)']

plt.bar(loss_labels, losses, color=['green', 'red', 'green', 'red'])
plt.ylabel('Loss Value')
plt.title('Comparison of MSE and CCE Loss')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()